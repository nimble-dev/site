<!DOCTYPE html>
<html lang="en-US">
<head><script type="text/javascript" src="https://web-static.archive.org/_static/js/bundle-playback.js?v=FC38Hc5A" charset="utf-8"></script>
<script type="text/javascript" src="https://web-static.archive.org/_static/js/wombat.js?v=txqj7nKC" charset="utf-8"></script>
<script>window.RufflePlayer=window.RufflePlayer||{};window.RufflePlayer.config={"autoplay":"on","unmuteOverlay":"hidden","showSwfDownload":true};</script>
<script type="text/javascript" src="https://web-static.archive.org/_static/js/ruffle/ruffle.js"></script>
<script type="text/javascript">
    __wm.init("https://web.archive.org/web");
  __wm.wombat("https://r-nimble.org/writing-reversible-jump-mcmc-in-nimble","20250518102746","https://web.archive.org/","web","https://web-static.archive.org/_static/",
	      "1747564066");
</script>
<link rel="stylesheet" type="text/css" href="https://web-static.archive.org/_static/css/banner-styles.css?v=p7PEIJWi" />
<link rel="stylesheet" type="text/css" href="https://web-static.archive.org/_static/css/iconochive.css?v=3PDvdIFv" />
<!-- End Wayback Rewrite JS Include -->

	<meta charset="UTF-8"/>
	<meta http-equiv="X-UA-Compatible" content="IE=10"/>
	<link rel="profile" href="http://gmpg.org/xfn/11"/>
	<link rel="pingback" href="https://r-nimble.org/xmlrpc.php"/>
	<title>Writing reversible jump MCMC in NIMBLE &#8211; NIMBLE</title>
<meta name="robots" content="max-image-preview:large"/>
	<style>img:is([sizes="auto" i], [sizes^="auto," i]) { contain-intrinsic-size: 3000px 1500px }</style>
	<link rel="dns-prefetch" href="//web.archive.org/web/20250518102746/https://maxcdn.bootstrapcdn.com/"/>
<link rel="alternate" type="application/rss+xml" title="NIMBLE » Feed" href="https://web.archive.org/web/20250518102746/https://r-nimble.org/feed"/>
<link rel="alternate" type="application/rss+xml" title="NIMBLE » Comments Feed" href="https://web.archive.org/web/20250518102746/https://r-nimble.org/comments/feed"/>
<link rel="alternate" type="application/rss+xml" title="NIMBLE » Writing reversible jump MCMC in NIMBLE Comments Feed" href="https://web.archive.org/web/20250518102746/https://r-nimble.org/writing-reversible-jump-mcmc-in-nimble/feed"/>
		<!-- This site uses the Google Analytics by MonsterInsights plugin v9.5.3 - Using Analytics tracking - https://www.monsterinsights.com/ -->
							<script src="//web.archive.org/web/20250518102746js_/https://www.googletagmanager.com/gtag/js?id=G-W2KREC469X" data-cfasync="false" data-wpfc-render="false" type="text/javascript" async></script>
			<script data-cfasync="false" data-wpfc-render="false" type="text/javascript">
				var mi_version = '9.5.3';
				var mi_track_user = true;
				var mi_no_track_reason = '';
								var MonsterInsightsDefaultLocations = {"page_location":"https:\/\/web.archive.org\/web\/20250518102746\/https:\/\/r-nimble.org\/writing-reversible-jump-mcmc-in-nimble\/"};
				if ( typeof MonsterInsightsPrivacyGuardFilter === 'function' ) {
					var MonsterInsightsLocations = (typeof MonsterInsightsExcludeQuery === 'object') ? MonsterInsightsPrivacyGuardFilter( MonsterInsightsExcludeQuery ) : MonsterInsightsPrivacyGuardFilter( MonsterInsightsDefaultLocations );
				} else {
					var MonsterInsightsLocations = (typeof MonsterInsightsExcludeQuery === 'object') ? MonsterInsightsExcludeQuery : MonsterInsightsDefaultLocations;
				}

								var disableStrs = [
										'ga-disable-G-W2KREC469X',
									];

				/* Function to detect opted out users */
				function __gtagTrackerIsOptedOut() {
					for (var index = 0; index < disableStrs.length; index++) {
						if (document.cookie.indexOf(disableStrs[index] + '=true') > -1) {
							return true;
						}
					}

					return false;
				}

				/* Disable tracking if the opt-out cookie exists. */
				if (__gtagTrackerIsOptedOut()) {
					for (var index = 0; index < disableStrs.length; index++) {
						window[disableStrs[index]] = true;
					}
				}

				/* Opt-out function */
				function __gtagTrackerOptout() {
					for (var index = 0; index < disableStrs.length; index++) {
						document.cookie = disableStrs[index] + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';
						window[disableStrs[index]] = true;
					}
				}

				if ('undefined' === typeof gaOptout) {
					function gaOptout() {
						__gtagTrackerOptout();
					}
				}
								window.dataLayer = window.dataLayer || [];

				window.MonsterInsightsDualTracker = {
					helpers: {},
					trackers: {},
				};
				if (mi_track_user) {
					function __gtagDataLayer() {
						dataLayer.push(arguments);
					}

					function __gtagTracker(type, name, parameters) {
						if (!parameters) {
							parameters = {};
						}

						if (parameters.send_to) {
							__gtagDataLayer.apply(null, arguments);
							return;
						}

						if (type === 'event') {
														parameters.send_to = monsterinsights_frontend.v4_id;
							var hookName = name;
							if (typeof parameters['event_category'] !== 'undefined') {
								hookName = parameters['event_category'] + ':' + name;
							}

							if (typeof MonsterInsightsDualTracker.trackers[hookName] !== 'undefined') {
								MonsterInsightsDualTracker.trackers[hookName](parameters);
							} else {
								__gtagDataLayer('event', name, parameters);
							}
							
						} else {
							__gtagDataLayer.apply(null, arguments);
						}
					}

					__gtagTracker('js', new Date());
					__gtagTracker('set', {
						'developer_id.dZGIzZG': true,
											});
					if ( MonsterInsightsLocations.page_location ) {
						__gtagTracker('set', MonsterInsightsLocations);
					}
										__gtagTracker('config', 'G-W2KREC469X', {"forceSSL":"true","link_attribution":"true"} );
															window.gtag = __gtagTracker;										(function () {
						/* https://developers.google.com/analytics/devguides/collection/analyticsjs/ */
						/* ga and __gaTracker compatibility shim. */
						var noopfn = function () {
							return null;
						};
						var newtracker = function () {
							return new Tracker();
						};
						var Tracker = function () {
							return null;
						};
						var p = Tracker.prototype;
						p.get = noopfn;
						p.set = noopfn;
						p.send = function () {
							var args = Array.prototype.slice.call(arguments);
							args.unshift('send');
							__gaTracker.apply(null, args);
						};
						var __gaTracker = function () {
							var len = arguments.length;
							if (len === 0) {
								return;
							}
							var f = arguments[len - 1];
							if (typeof f !== 'object' || f === null || typeof f.hitCallback !== 'function') {
								if ('send' === arguments[0]) {
									var hitConverted, hitObject = false, action;
									if ('event' === arguments[1]) {
										if ('undefined' !== typeof arguments[3]) {
											hitObject = {
												'eventAction': arguments[3],
												'eventCategory': arguments[2],
												'eventLabel': arguments[4],
												'value': arguments[5] ? arguments[5] : 1,
											}
										}
									}
									if ('pageview' === arguments[1]) {
										if ('undefined' !== typeof arguments[2]) {
											hitObject = {
												'eventAction': 'page_view',
												'page_path': arguments[2],
											}
										}
									}
									if (typeof arguments[2] === 'object') {
										hitObject = arguments[2];
									}
									if (typeof arguments[5] === 'object') {
										Object.assign(hitObject, arguments[5]);
									}
									if ('undefined' !== typeof arguments[1].hitType) {
										hitObject = arguments[1];
										if ('pageview' === hitObject.hitType) {
											hitObject.eventAction = 'page_view';
										}
									}
									if (hitObject) {
										action = 'timing' === arguments[1].hitType ? 'timing_complete' : hitObject.eventAction;
										hitConverted = mapArgs(hitObject);
										__gtagTracker('event', action, hitConverted);
									}
								}
								return;
							}

							function mapArgs(args) {
								var arg, hit = {};
								var gaMap = {
									'eventCategory': 'event_category',
									'eventAction': 'event_action',
									'eventLabel': 'event_label',
									'eventValue': 'event_value',
									'nonInteraction': 'non_interaction',
									'timingCategory': 'event_category',
									'timingVar': 'name',
									'timingValue': 'value',
									'timingLabel': 'event_label',
									'page': 'page_path',
									'location': 'page_location',
									'title': 'page_title',
									'referrer' : 'page_referrer',
								};
								for (arg in args) {
																		if (!(!args.hasOwnProperty(arg) || !gaMap.hasOwnProperty(arg))) {
										hit[gaMap[arg]] = args[arg];
									} else {
										hit[arg] = args[arg];
									}
								}
								return hit;
							}

							try {
								f.hitCallback();
							} catch (ex) {
							}
						};
						__gaTracker.create = newtracker;
						__gaTracker.getByName = newtracker;
						__gaTracker.getAll = function () {
							return [];
						};
						__gaTracker.remove = noopfn;
						__gaTracker.loaded = true;
						window['__gaTracker'] = __gaTracker;
					})();
									} else {
										console.log("");
					(function () {
						function __gtagTracker() {
							return null;
						}

						window['__gtagTracker'] = __gtagTracker;
						window['gtag'] = __gtagTracker;
					})();
									}
			</script>
				<!-- / Google Analytics by MonsterInsights -->
		<script type="text/javascript">
/* <![CDATA[ */
window._wpemojiSettings = {"baseUrl":"https:\/\/web.archive.org\/web\/20250518102746\/https:\/\/s.w.org\/images\/core\/emoji\/15.1.0\/72x72\/","ext":".png","svgUrl":"https:\/\/web.archive.org\/web\/20250518102746\/https:\/\/s.w.org\/images\/core\/emoji\/15.1.0\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/web.archive.org\/web\/20250518102746\/https:\/\/r-nimble.org\/wp-includes\/js\/wp-emoji-release.min.js?ver=6.8.1"}};
/*! This file is auto-generated */
!function(i,n){var o,s,e;function c(e){try{var t={supportTests:e,timestamp:(new Date).valueOf()};sessionStorage.setItem(o,JSON.stringify(t))}catch(e){}}function p(e,t,n){e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(t,0,0);var t=new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data),r=(e.clearRect(0,0,e.canvas.width,e.canvas.height),e.fillText(n,0,0),new Uint32Array(e.getImageData(0,0,e.canvas.width,e.canvas.height).data));return t.every(function(e,t){return e===r[t]})}function u(e,t,n){switch(t){case"flag":return n(e,"\ud83c\udff3\ufe0f\u200d\u26a7\ufe0f","\ud83c\udff3\ufe0f\u200b\u26a7\ufe0f")?!1:!n(e,"\ud83c\uddfa\ud83c\uddf3","\ud83c\uddfa\u200b\ud83c\uddf3")&&!n(e,"\ud83c\udff4\udb40\udc67\udb40\udc62\udb40\udc65\udb40\udc6e\udb40\udc67\udb40\udc7f","\ud83c\udff4\u200b\udb40\udc67\u200b\udb40\udc62\u200b\udb40\udc65\u200b\udb40\udc6e\u200b\udb40\udc67\u200b\udb40\udc7f");case"emoji":return!n(e,"\ud83d\udc26\u200d\ud83d\udd25","\ud83d\udc26\u200b\ud83d\udd25")}return!1}function f(e,t,n){var r="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?new OffscreenCanvas(300,150):i.createElement("canvas"),a=r.getContext("2d",{willReadFrequently:!0}),o=(a.textBaseline="top",a.font="600 32px Arial",{});return e.forEach(function(e){o[e]=t(a,e,n)}),o}function t(e){var t=i.createElement("script");t.src=e,t.defer=!0,i.head.appendChild(t)}"undefined"!=typeof Promise&&(o="wpEmojiSettingsSupports",s=["flag","emoji"],n.supports={everything:!0,everythingExceptFlag:!0},e=new Promise(function(e){i.addEventListener("DOMContentLoaded",e,{once:!0})}),new Promise(function(t){var n=function(){try{var e=JSON.parse(sessionStorage.getItem(o));if("object"==typeof e&&"number"==typeof e.timestamp&&(new Date).valueOf()<e.timestamp+604800&&"object"==typeof e.supportTests)return e.supportTests}catch(e){}return null}();if(!n){if("undefined"!=typeof Worker&&"undefined"!=typeof OffscreenCanvas&&"undefined"!=typeof URL&&URL.createObjectURL&&"undefined"!=typeof Blob)try{var e="postMessage("+f.toString()+"("+[JSON.stringify(s),u.toString(),p.toString()].join(",")+"));",r=new Blob([e],{type:"text/javascript"}),a=new Worker(URL.createObjectURL(r),{name:"wpTestEmojiSupports"});return void(a.onmessage=function(e){c(n=e.data),a.terminate(),t(n)})}catch(e){}c(n=f(s,u,p))}t(n)}).then(function(e){for(var t in e)n.supports[t]=e[t],n.supports.everything=n.supports.everything&&n.supports[t],"flag"!==t&&(n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&n.supports[t]);n.supports.everythingExceptFlag=n.supports.everythingExceptFlag&&!n.supports.flag,n.DOMReady=!1,n.readyCallback=function(){n.DOMReady=!0}}).then(function(){return e}).then(function(){var e;n.supports.everything||(n.readyCallback(),(e=n.source||{}).concatemoji?t(e.concatemoji):e.wpemoji&&e.twemoji&&(t(e.twemoji),t(e.wpemoji)))}))}((window,document),window._wpemojiSettings);
/* ]]> */
</script>
<style id="wp-emoji-styles-inline-css" type="text/css">

	img.wp-smiley, img.emoji {
		display: inline !important;
		border: none !important;
		box-shadow: none !important;
		height: 1em !important;
		width: 1em !important;
		margin: 0 0.07em !important;
		vertical-align: -0.1em !important;
		background: none !important;
		padding: 0 !important;
	}
</style>
<link rel="stylesheet" id="wp-block-library-css" href="https://web.archive.org/web/20250518102746cs_/https://r-nimble.org/wp-includes/css/dist/block-library/style.min.css?ver=6.8.1" type="text/css" media="all"/>
<style id="classic-theme-styles-inline-css" type="text/css">
/*! This file is auto-generated */
.wp-block-button__link{color:#fff;background-color:#32373c;border-radius:9999px;box-shadow:none;text-decoration:none;padding:calc(.667em + 2px) calc(1.333em + 2px);font-size:1.125em}.wp-block-file__button{background:#32373c;color:#fff;text-decoration:none}
</style>
<style id="global-styles-inline-css" type="text/css">
:root{--wp--preset--aspect-ratio--square: 1;--wp--preset--aspect-ratio--4-3: 4/3;--wp--preset--aspect-ratio--3-4: 3/4;--wp--preset--aspect-ratio--3-2: 3/2;--wp--preset--aspect-ratio--2-3: 2/3;--wp--preset--aspect-ratio--16-9: 16/9;--wp--preset--aspect-ratio--9-16: 9/16;--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;--wp--preset--shadow--natural: 6px 6px 9px rgba(0, 0, 0, 0.2);--wp--preset--shadow--deep: 12px 12px 50px rgba(0, 0, 0, 0.4);--wp--preset--shadow--sharp: 6px 6px 0px rgba(0, 0, 0, 0.2);--wp--preset--shadow--outlined: 6px 6px 0px -3px rgba(255, 255, 255, 1), 6px 6px rgba(0, 0, 0, 1);--wp--preset--shadow--crisp: 6px 6px 0px rgba(0, 0, 0, 1);}:where(.is-layout-flex){gap: 0.5em;}:where(.is-layout-grid){gap: 0.5em;}body .is-layout-flex{display: flex;}.is-layout-flex{flex-wrap: wrap;align-items: center;}.is-layout-flex > :is(*, div){margin: 0;}body .is-layout-grid{display: grid;}.is-layout-grid > :is(*, div){margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
:where(.wp-block-post-template.is-layout-flex){gap: 1.25em;}:where(.wp-block-post-template.is-layout-grid){gap: 1.25em;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}:where(.wp-block-columns.is-layout-grid){gap: 2em;}
:root :where(.wp-block-pullquote){font-size: 1.5em;line-height: 1.6;}
</style>
<link rel="stylesheet" id="iw-defaults-css" href="https://web.archive.org/web/20250518102746cs_/https://r-nimble.org/wp-content/plugins/widgets-for-siteorigin/css/defaults.css?ver=1.4.7" type="text/css" media="all"/>
<link rel="stylesheet" id="font-awesome-css" href="//web.archive.org/web/20250518102746cs_/https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css?ver=1.0.0" type="text/css" media="all"/>
<link rel="stylesheet" id="circles-gallery-plugin-styles-css" href="https://web.archive.org/web/20250518102746cs_/https://r-nimble.org/wp-content/plugins/circles-gallery/public/assets/css/public.css?ver=1.0.0" type="text/css" media="all"/>
<link rel="stylesheet" id="vantage-style-css" href="https://web.archive.org/web/20250518102746cs_/https://r-nimble.org/wp-content/themes/vantage/style.css?ver=2.6" type="text/css" media="all"/>
<style id="akismet-widget-style-inline-css" type="text/css">

			.a-stats {
				--akismet-color-mid-green: #357b49;
				--akismet-color-white: #fff;
				--akismet-color-light-grey: #f6f7f7;

				max-width: 350px;
				width: auto;
			}

			.a-stats * {
				all: unset;
				box-sizing: border-box;
			}

			.a-stats strong {
				font-weight: 600;
			}

			.a-stats a.a-stats__link,
			.a-stats a.a-stats__link:visited,
			.a-stats a.a-stats__link:active {
				background: var(--akismet-color-mid-green);
				border: none;
				box-shadow: none;
				border-radius: 8px;
				color: var(--akismet-color-white);
				cursor: pointer;
				display: block;
				font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen-Sans', 'Ubuntu', 'Cantarell', 'Helvetica Neue', sans-serif;
				font-weight: 500;
				padding: 12px;
				text-align: center;
				text-decoration: none;
				transition: all 0.2s ease;
			}

			/* Extra specificity to deal with TwentyTwentyOne focus style */
			.widget .a-stats a.a-stats__link:focus {
				background: var(--akismet-color-mid-green);
				color: var(--akismet-color-white);
				text-decoration: none;
			}

			.a-stats a.a-stats__link:hover {
				filter: brightness(110%);
				box-shadow: 0 4px 12px rgba(0, 0, 0, 0.06), 0 0 2px rgba(0, 0, 0, 0.16);
			}

			.a-stats .count {
				color: var(--akismet-color-white);
				display: block;
				font-size: 1.5em;
				line-height: 1.4;
				padding: 0 13px;
				white-space: nowrap;
			}
		
</style>
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-content/plugins/google-analytics-for-wordpress/assets/js/frontend-gtag.min.js?ver=9.5.3" id="monsterinsights-frontend-script-js" async="async" data-wp-strategy="async"></script>
<script data-cfasync="false" data-wpfc-render="false" type="text/javascript" id="monsterinsights-frontend-script-js-extra">/* <![CDATA[ */
var monsterinsights_frontend = {"js_events_tracking":"true","download_extensions":"doc,pdf,ppt,zip,xls,docx,pptx,xlsx","inbound_paths":"[{\"path\":\"\\\/go\\\/\",\"label\":\"affiliate\"},{\"path\":\"\\\/recommend\\\/\",\"label\":\"affiliate\"}]","home_url":"https:\/\/web.archive.org\/web\/20250518102746\/https:\/\/r-nimble.org","hash_tracking":"false","v4_id":"G-W2KREC469X"};/* ]]> */
</script>
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-includes/js/jquery/jquery.min.js?ver=3.7.1" id="jquery-core-js"></script>
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.4.1" id="jquery-migrate-js"></script>
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-content/plugins/circles-gallery/public/assets/js/public.js?ver=1.0.0" id="circles-gallery-plugin-script-js"></script>
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-content/themes/vantage/js/jquery.flexslider.min.js?ver=2.1" id="jquery-flexslider-js"></script>
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-content/themes/vantage/js/jquery.touchSwipe.min.js?ver=1.6.6" id="jquery-touchswipe-js"></script>
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-content/themes/vantage/js/jquery.theme-main.min.js?ver=2.6" id="vantage-main-js"></script>
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-content/plugins/so-widgets-bundle/js/lib/jquery.fitvids.min.js?ver=1.1" id="jquery-fitvids-js"></script>
<!--[if lt IE 9]>
<script type="text/javascript" src="https://r-nimble.org/wp-content/themes/vantage/js/html5.min.js?ver=3.7.3" id="vantage-html5-js"></script>
<![endif]-->
<!--[if (gte IE 6)&(lte IE 8)]>
<script type="text/javascript" src="https://r-nimble.org/wp-content/themes/vantage/js/selectivizr.min.js?ver=1.0.2" id="vantage-selectivizr-js"></script>
<![endif]-->
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.5.7" id="ga-external-tracking-js"></script>
<link rel="https://api.w.org/" href="https://r-nimble.org/wp-json/"/><link rel="alternate" title="JSON" type="application/json" href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-json/wp/v2/posts/634"/><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://r-nimble.org/xmlrpc.php?rsd"/>
<meta name="generator" content="WordPress 6.8.1"/>
<link rel="canonical" href="https://web.archive.org/web/20250518102746/https://r-nimble.org/writing-reversible-jump-mcmc-in-nimble"/>
<link rel="shortlink" href="https://web.archive.org/web/20250518102746/https://r-nimble.org/?p=634"/>
<link rel="alternate" title="oEmbed (JSON)" type="application/json+oembed" href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fr-nimble.org%2Fwriting-reversible-jump-mcmc-in-nimble"/>
<link rel="alternate" title="oEmbed (XML)" type="text/xml+oembed" href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fr-nimble.org%2Fwriting-reversible-jump-mcmc-in-nimble&amp;format=xml"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/><style type="text/css">
/* <![CDATA[ */
img.latex { vertical-align: middle; border: none; }
/* ]]> */
</style>
	<style type="text/css" media="screen">
		#footer-widgets .widget { width: 100%; }
		#masthead-widgets .widget { width: 100%; }
	</style>
	<style type="text/css" id="vantage-footer-widgets">#footer-widgets aside { width : 100%; } </style> <style type="text/css" id="customizer-css">#masthead h1 { font-family: "Arial", Arial, Helvetica, sans-serif; font-weight: 400 } #masthead .hgroup h1, #masthead.masthead-logo-in-menu .logo > h1 { font-size: px } a.button, button, html input[type="button"], input[type="reset"], input[type="submit"], .post-navigation a, #image-navigation a, article.post .more-link, article.page .more-link, .paging-navigation a, .woocommerce #page-wrapper .button, .woocommerce a.button, .woocommerce .checkout-button, .woocommerce input.button, #infinite-handle span button { text-shadow: none } a.button, button, html input[type="button"], input[type="reset"], input[type="submit"], .post-navigation a, #image-navigation a, article.post .more-link, article.page .more-link, .paging-navigation a, .woocommerce #page-wrapper .button, .woocommerce a.button, .woocommerce .checkout-button, .woocommerce input.button, .woocommerce #respond input#submit.alt, .woocommerce a.button.alt, .woocommerce button.button.alt, .woocommerce input.button.alt, #infinite-handle span { -webkit-box-shadow: none; -moz-box-shadow: none; box-shadow: none } #colophon, body.layout-full { background-color: #ffffff } </style><link rel="icon" href="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2016/12/nimbleLogo-150x150.png" sizes="32x32"/>
<link rel="icon" href="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2016/12/nimbleLogo.png" sizes="192x192"/>
<link rel="apple-touch-icon" href="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2016/12/nimbleLogo.png"/>
<meta name="msapplication-TileImage" content="https://r-nimble.org/wp-content/uploads/2016/12/nimbleLogo.png"/>
<!-- Google Analytics Tracking by Google Analyticator 6.5.7 -->
<script type="text/javascript">
    var analyticsFileTypes = [];
    var analyticsSnippet = 'enabled';
    var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
  
	_gaq.push(['_setAccount', 'UA-51994105-1']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://web.archive.org/web/20250518102746/https://ssl' : 'https://web.archive.org/web/20250518102746/http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
</head>

<body class="wp-singular post-template-default single single-post postid-634 single-format-standard wp-theme-vantage group-blog responsive layout-full no-js has-sidebar has-menu-search page-layout-full-width">


<div id="page-wrapper">

	
	
		<header id="masthead" class="site-header" role="banner">

	<div class="hgroup full-container masthead-sidebar">

		
							<div id="masthead-widgets" class="full-container">
					<aside id="siteorigin-panels-builder-2" class="widget widget_siteorigin-panels-builder"><div id="pl-w59dd5d346904a" class="panel-layout"><div id="pg-w59dd5d346904a-0" class="panel-grid panel-no-style"><div id="pgc-w59dd5d346904a-0-0" class="panel-grid-cell"><div id="panel-w59dd5d346904a-0-0-0" class="so-panel widget widget_black-studio-tinymce widget_black_studio_tinymce panel-first-child panel-last-child" data-index="0"><div class="textwidget"><p><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-content/uploads/2016/10/nimble-logo-oval-small.png"><img class="alignnone wp-image-436 size-full" src="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2016/10/nimble-logo-oval-small.png" alt="" width="251" height="62"/></a></p>
<h4><em>Create fast models and algorithms in R.</em></h4>
</div></div></div><div id="pgc-w59dd5d346904a-0-1" class="panel-grid-cell">
		<div id="panel-w59dd5d346904a-0-1-0" class="so-panel widget widget_recent-posts widget_recent_entries panel-first-child panel-last-child" data-index="1">
		<h3 class="widget-title">Recent Posts</h3>
		<ul>
											<li>
					<a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/announcing-the-nimblemacros-package-and-the-use-of-macros-in-nimble-models">announcing the nimbleMacros package and the use of macros in NIMBLE models</a>
									</li>
											<li>
					<a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/version-1-3-0-of-nimble-released">Version 1.3.0 of NIMBLE released</a>
									</li>
											<li>
					<a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/version-1-2-1-of-nimble-released">Version 1.2.1 of NIMBLE released</a>
									</li>
											<li>
					<a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/version-1-2-0-of-nimble-released">Version 1.2.0 of NIMBLE released</a>
									</li>
					</ul>

		</div></div></div></div></aside>				</div>
			
		
	</div><!-- .hgroup.full-container -->

	
<nav role="navigation" class="site-navigation main-navigation primary use-sticky-menu">

	<div class="full-container">
							<div id="search-icon">
				<div id="search-icon-icon"><div class="vantage-icon-search"></div></div>
				
<form method="get" class="searchform" action="https://web.archive.org/web/20250518102746/https://r-nimble.org/" role="search">
	<input type="text" class="field" name="s" value="" placeholder="Search"/>
</form>
			</div>
		
					<div class="menu-menu-1-container"><ul id="menu-menu-1" class="menu"><li id="menu-item-200" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-200"><a href="https://web.archive.org/web/20250518102746/http://r-nimble.org/"><span class="icon"></span>Home</a></li>
<li id="menu-item-241" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-241"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/what-is-nimble">What is NIMBLE?</a></li>
<li id="menu-item-324" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-324"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/examples">Examples</a></li>
<li id="menu-item-243" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-243"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/documentation-2">Documentation</a></li>
<li id="menu-item-244" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-244"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/download">Download</a></li>
<li id="menu-item-250" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-250"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/more">More</a>
<ul class="sub-menu">
	<li id="menu-item-332" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-332"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/more/contributing">How to Contribute</a></li>
	<li id="menu-item-246" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-246"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/more/news">Release notes</a></li>
	<li id="menu-item-247" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-247"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/more/issues-and-groups">Groups and Issues</a></li>
	<li id="menu-item-405" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-405"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/license-and-citation">License and Citation</a></li>
	<li id="menu-item-621" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-621"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/more/about-us">About Us</a></li>
	<li id="menu-item-290" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-290"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/recent-posts">Recent posts</a></li>
</ul>
</li>
</ul></div>			</div>
</nav><!-- .site-navigation .main-navigation -->

</header><!-- #masthead .site-header -->

	
	
	
	
	<div id="main" class="site-main">
		<div class="full-container">
			
<div id="primary" class="content-area">
	<div id="content" class="site-content" role="main">

	
		
<article id="post-634" class="post post-634 type-post status-publish format-standard hentry category-examples category-r tag-r">

	<div class="entry-main">

		
					<header class="entry-header">

				
									<h1 class="entry-title">Writing reversible jump MCMC in NIMBLE</h1>
				
									<div class="entry-meta">
						Posted on <a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/writing-reversible-jump-mcmc-in-nimble" title="3:29 pm" rel="bookmark"><time class="entry-date" datetime="2017-02-15T15:29:02-08:00">February 15, 2017</time></a><time class="updated" datetime="2017-02-15T15:29:02-08:00">February 15, 2017</time> <span class="byline"> by <span class="author vcard"><a class="url fn n" href="https://web.archive.org/web/20250518102746/https://r-nimble.org/author/nimble-admin" title="View all posts by nimble-admin" rel="author">nimble-admin</a></span></span> 					</div><!-- .entry-meta -->
				
			</header><!-- .entry-header -->
		
		<div class="entry-content">
			<p><html><br/>
<head></p>
<style type="text/css">
.knitr .inline {
  background-color: #f7f7f7;
  border:solid 1px #B0B0B0;
}
.error {
	font-weight: bold;
	color: #FF0000;
}
.warning {
	font-weight: bold;
}
.message {
	font-style: italic;
}
.source, .output, .warning, .error, .message {
	padding: 0 1em;
  border:solid 1px #F7F7F7;
}
.source {
  background-color: #f5f5f5;
}
.rimage .left {
  text-align: left;
}
.rimage .right {
  text-align: right;
}
.rimage .center {
  text-align: center;
}
.hl.num {
  color: #AF0F91;
}
.hl.str {
  color: #317ECC;
}
.hl.com {
  color: #AD95AF;
  font-style: italic;
}
.hl.opt {
  color: #000000;
}
.hl.std {
  color: #585858;
}
.hl.kwa {
  color: #295F94;
  font-weight: bold;
}
.hl.kwb {
  color: #B05A65;
}
.hl.kwc {
  color: #55aa55;
}
.hl.kwd {
  color: #BC5A65;
  font-weight: bold;
}
</style>
<p>  <title>Writing reversible jump MCMC samplers in NIMBLE</title><br/>
</head><br/>
<body></p>
<section>
<h1> Writing reversible jump MCMC samplers in NIMBLE </h1>
<h2> Introduction </h2>
<p> Reversible jump Markov chain Monte Carlo (RJMCMC) is a powerful method for drawing posterior samples over multiple models by jumping between models as part of the sampling.  For a simple example that I&#8217;ll use below, think about a regression model where we don&#8217;t know which explanatory variables to include, so we want to do variable selection.  There may be a huge number of possible combinations of variables, so it would be nice to explore the combinations as part of one MCMC run rather than running many different MCMCs on some chosen combinations of variables.  To do it in one MCMC, one sets up a model that includes all possible variables and coefficients. Then &#8220;removing&#8221; a variable from the model is equivalent to setting its coefficient to zero, and &#8220;adding&#8221; it back into the model requires a valid move to a non-zero coefficient.  Reversible jump MCMC methods provide a way to do that. </p>
<p>Reversible jump is different enough from other MCMC situations that packages like WinBUGS, OpenBUGS, JAGS, and Stan don&#8217;t do it.  An alternative way to set up the problem, which does not involve the technicality of changing model dimension, is to use indicator variables.  An indicator variable is either zero or one and is multiplied by another parameter.  Thus when the indicator is 0, the parameter that is multipled by 0 is effectively removed from the model.  Darren Wilkinson has a nice old <a href="https://web.archive.org/web/20250518102746/https://darrenjw.wordpress.com/2012/11/20/getting-started-with-bayesian-variable-selection-using-jags-and-rjags/">blog post on using indicator variables for Bayesian variable selection</a> in BUGS code.  The problem with using indicator variables is that they can create a lot of extra MCMC work and the samplers operating on them may not be well designed for their situation.</p>
<p>NIMBLE lets one program model-generic algorithms to use with models written in the BUGS language.  The MCMC system works by first making a configuration in R, which can be modified by a user or a program, and then building and compiling the MCMC.  The nimbleFunction programming system makes it easy to write new kinds of samplers.</p>
<p>The aim of this blog post is to illustrate how one can write reversible jump MCMC in NIMBLE.  A variant of this may be incorporated into a later version of NIMBLE. </p>
</section>
<section>
<h2> Example model </h2>
<p>For illustration, I&#8217;ll use an extremely simple model: linear regression with two candidate explanatory variables.  I&#8217;ll assume the first, x1, should definitely be included.  But the analyst is not sure about the second, x2, and wants to use reversible jump to include it or exclude it from the model.  I won&#8217;t deal with the issue of choosing the prior probability that it should be in the model. Instead I&#8217;ll just pick a simple choice and stay focused on the reversible jump aspect of the example.  The methods below could be applied en masse to large models.</p>
<p> Here I&#8217;ll simulate data to use:</p>
<div class="chunk" id="simulate-data">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl std">N</span> <span class="hl kwb">&lt;-</span> <span class="hl num">20</span>
<span class="hl std">x1</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">runif</span><span class="hl std">(N,</span> <span class="hl opt">-</span><span class="hl num">1</span><span class="hl std">,</span> <span class="hl num">1</span><span class="hl std">)</span>
<span class="hl std">x2</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">runif</span><span class="hl std">(N,</span> <span class="hl opt">-</span><span class="hl num">1</span><span class="hl std">,</span> <span class="hl num">1</span><span class="hl std">)</span>
<span class="hl std">Y</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">rnorm</span><span class="hl std">(N,</span> <span class="hl num">1.5</span> <span class="hl opt">+</span> <span class="hl num">0.5</span> <span class="hl opt">*</span> <span class="hl std">x1,</span> <span class="hl kwc">sd</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">)</span>
</pre>
</div>
</div>
</div>
<p> I&#8217;ll take two approaches to implementing RJ sampling.  In the first, I&#8217;ll use a traditional indicator variable and write the RJMCMC sampler to use it.  In the second, I&#8217;ll write the RJMCMC sampler to incorporate the prior probability of inclusion for the coefficient it is sampling, so the indicator variable won&#8217;t be needed in the model.</p>
<p> First we&#8217;ll need nimble:</p>
<div class="chunk" id="load-nimble">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl kwd">library</span><span class="hl std">(nimble)</span>
</pre>
</div>
</div>
</div>
</section>
<section>
<h2> RJMCMC implementation 1, with indicator variable included </h2>
<p> Here is BUGS code for the first method, with an indicator variable written into the model, and the creation of a NIMBLE model object from it.  Note that although RJMCMC technically jumps between models of different dimensions, we still start by creating the largest model so that changes of dimension can occur by setting some parameters to zero (or, in the second method, possibly another fixed value). </p>
<div class="chunk" id="first-model-code">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl std">simpleCode1</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">nimbleCode</span><span class="hl std">({</span>
    <span class="hl std">beta0</span> <span class="hl opt">~</span> <span class="hl kwd">dnorm</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">sd</span> <span class="hl std">=</span> <span class="hl num">100</span><span class="hl std">)</span>
    <span class="hl std">beta1</span> <span class="hl opt">~</span> <span class="hl kwd">dnorm</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">sd</span> <span class="hl std">=</span> <span class="hl num">100</span><span class="hl std">)</span>
    <span class="hl std">beta2</span> <span class="hl opt">~</span> <span class="hl kwd">dnorm</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">sd</span> <span class="hl std">=</span> <span class="hl num">100</span><span class="hl std">)</span>
    <span class="hl std">sigma</span> <span class="hl opt">~</span> <span class="hl kwd">dunif</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span> <span class="hl num">100</span><span class="hl std">)</span>
    <span class="hl std">z2</span> <span class="hl opt">~</span> <span class="hl kwd">dbern</span><span class="hl std">(</span><span class="hl num">0.8</span><span class="hl std">)</span>  <span class="hl com">## indicator variable for including beta2</span>
    <span class="hl std">beta2z2</span> <span class="hl kwb">&lt;-</span> <span class="hl std">beta2</span> <span class="hl opt">*</span> <span class="hl std">z2</span>
    <span class="hl kwa">for</span><span class="hl std">(i</span> <span class="hl kwa">in</span> <span class="hl num">1</span><span class="hl opt">:</span><span class="hl std">N) {</span>
        <span class="hl std">Ypred[i]</span> <span class="hl kwb">&lt;-</span> <span class="hl std">beta0</span> <span class="hl opt">+</span> <span class="hl std">beta1</span> <span class="hl opt">*</span> <span class="hl std">x1[i]</span> <span class="hl opt">+</span> <span class="hl std">beta2z2</span> <span class="hl opt">*</span> <span class="hl std">x2[i]</span>
        <span class="hl std">Y[i]</span> <span class="hl opt">~</span> <span class="hl kwd">dnorm</span><span class="hl std">(Ypred[i],</span> <span class="hl kwc">sd</span> <span class="hl std">= sigma)</span>
    <span class="hl std">}</span>
<span class="hl std">})</span>

<span class="hl std">simpleModel1</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">nimbleModel</span><span class="hl std">(simpleCode1,</span>
                            <span class="hl kwc">data</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">Y</span> <span class="hl std">= Y,</span> <span class="hl kwc">x1</span> <span class="hl std">= x1,</span> <span class="hl kwc">x2</span> <span class="hl std">= x2),</span>
                            <span class="hl kwc">constants</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">N</span> <span class="hl std">= N),</span>
                            <span class="hl kwc">inits</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">beta0</span> <span class="hl std">=</span> <span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">beta1</span> <span class="hl std">=</span> <span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">beta2</span> <span class="hl std">=</span> <span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">sigma</span> <span class="hl std">=</span> <span class="hl kwd">sd</span><span class="hl std">(Y),</span> <span class="hl kwc">z2</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">))</span>
</pre>
</div>
</div>
</div>
<p> Now here are two custom samplers.  The first one will sample beta2 <i>only</i> if the indicator variable z2 is 1 (meaning that beta2 is included in the model).  It does this by containing a regular random walk sampler but only calling it when the indicator is 1 (we could perhaps set it up to contain <i>any</i> sampler to be used when z2 is 1, but for now it&#8217;s a random walk sampler).  The second sampler makes reversible jump proposals to move beta2 in and out of the model.  When it is out of the model, both beta2 and z2 are set to zero.  Since beta2 will be zero every time z2 is zero, we don&#8217;t really need beta2z2, but it ensures correct behavior in other cases, like if someone runs default samplers on the model and expects the indicator variable to do its job correctly.  For use in reversible jump, z2&#8217;s role is really to trigger the prior probability (set to 0.8 in this example) of being in the model. </p>
<p> <i>Don&#8217;t worry about the warning message emitted by NIMBLE.</i>  They are there because when a nimbleFunction is defined it tries to make sure the user knows anything else that needs to be defined.</p>
<div class="chunk" id="first-samplers">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl std">RW_sampler_nonzero_indicator</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">nimbleFunction</span><span class="hl std">(</span>
    <span class="hl kwc">contains</span> <span class="hl std">= sampler_BASE,</span>
    <span class="hl kwc">setup</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">(</span><span class="hl kwc">model</span><span class="hl std">,</span> <span class="hl kwc">mvSaved</span><span class="hl std">,</span> <span class="hl kwc">target</span><span class="hl std">,</span> <span class="hl kwc">control</span><span class="hl std">) {</span>
        <span class="hl std">regular_RW_sampler</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">sampler_RW</span><span class="hl std">(model, mvSaved,</span> <span class="hl kwc">target</span> <span class="hl std">= target,</span> <span class="hl kwc">control</span> <span class="hl std">= control</span><span class="hl opt">$</span><span class="hl std">RWcontrol)</span>
        <span class="hl std">indicatorNode</span> <span class="hl kwb">&lt;-</span> <span class="hl std">control</span><span class="hl opt">$</span><span class="hl std">indicator</span>
    <span class="hl std">},</span>
    <span class="hl kwc">run</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">() {</span>
        <span class="hl kwa">if</span><span class="hl std">(model[[indicatorNode]]</span> <span class="hl opt">==</span> <span class="hl num">1</span><span class="hl std">) regular_RW_sampler</span><span class="hl opt">$</span><span class="hl kwd">run</span><span class="hl std">()</span>
    <span class="hl std">},</span>
    <span class="hl kwc">methods</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span>
        <span class="hl kwc">reset</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">() {regular_RW_sampler</span><span class="hl opt">$</span><span class="hl kwd">reset</span><span class="hl std">()}</span>
    <span class="hl std">))</span>
</pre>
</div>
<div class="warning">
<pre class="knitr r">## Warning in nf_checkDSLcode(code): For this nimbleFunction to compile, these
## functions must be defined as nimbleFunctions or nimbleFunction methods:
## reset.
</pre>
</div>
<div class="source">
<pre class="knitr r"><span class="hl std">RJindicatorSampler</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">nimbleFunction</span><span class="hl std">(</span>
    <span class="hl kwc">contains</span> <span class="hl std">= sampler_BASE,</span>
    <span class="hl kwc">setup</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">(</span> <span class="hl kwc">model</span><span class="hl std">,</span> <span class="hl kwc">mvSaved</span><span class="hl std">,</span> <span class="hl kwc">target</span><span class="hl std">,</span> <span class="hl kwc">control</span> <span class="hl std">) {</span>
        <span class="hl com">## target should be the name of the indicator node, 'z2' above</span>
        <span class="hl com">## control should have an element called coef for the name of the corresponding coefficient, 'beta2' above.  </span>
        <span class="hl std">coefNode</span> <span class="hl kwb">&lt;-</span> <span class="hl std">control</span><span class="hl opt">$</span><span class="hl std">coef</span>
        <span class="hl std">scale</span> <span class="hl kwb">&lt;-</span> <span class="hl std">control</span><span class="hl opt">$</span><span class="hl std">scale</span>
        <span class="hl std">calcNodes</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model</span><span class="hl opt">$</span><span class="hl kwd">getDependencies</span><span class="hl std">(</span><span class="hl kwd">c</span><span class="hl std">(coefNode, target))</span>
    <span class="hl std">},</span>
    <span class="hl kwc">run</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">( ) {</span> <span class="hl com">## The reversible-jump updates happen here.</span>
        <span class="hl std">currentIndicator</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model[[target]]</span>
        <span class="hl std">currentLogProb</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model</span><span class="hl opt">$</span><span class="hl kwd">getLogProb</span><span class="hl std">(calcNodes)</span>
        <span class="hl kwa">if</span><span class="hl std">(currentIndicator</span> <span class="hl opt">==</span> <span class="hl num">1</span><span class="hl std">) {</span>
            <span class="hl com">## propose removing it</span>
            <span class="hl std">currentCoef</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model[[coefNode]]</span>
            <span class="hl std">logProbReverseProposal</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">dnorm</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">, currentCoef,</span> <span class="hl kwc">sd</span> <span class="hl std">= scale,</span> <span class="hl kwc">log</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">)</span>
            <span class="hl std">model[[target]]</span> <span class="hl kwb">&lt;&lt;-</span> <span class="hl num">0</span>
            <span class="hl std">model[[coefNode]]</span> <span class="hl kwb">&lt;&lt;-</span> <span class="hl num">0</span>
            <span class="hl std">proposalLogProb</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model</span><span class="hl opt">$</span><span class="hl kwd">calculate</span><span class="hl std">(calcNodes)</span>
            <span class="hl std">log_accept_prob</span> <span class="hl kwb">&lt;-</span> <span class="hl std">proposalLogProb</span> <span class="hl opt">-</span> <span class="hl std">currentLogProb</span> <span class="hl opt">+</span> <span class="hl std">logProbReverseProposal</span>
        <span class="hl std">}</span> <span class="hl kwa">else</span> <span class="hl std">{</span>
            <span class="hl com">## propose adding it</span>
            <span class="hl std">proposalCoef</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">rnorm</span><span class="hl std">(</span><span class="hl num">1</span><span class="hl std">,</span> <span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">sd</span> <span class="hl std">= scale)</span>
            <span class="hl std">model[[target]]</span> <span class="hl kwb">&lt;&lt;-</span> <span class="hl num">1</span>
            <span class="hl std">model[[coefNode]]</span> <span class="hl kwb">&lt;&lt;-</span> <span class="hl std">proposalCoef</span>
            <span class="hl std">logProbForwardProposal</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">dnorm</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">, proposalCoef,</span> <span class="hl kwc">sd</span> <span class="hl std">= scale,</span> <span class="hl kwc">log</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">)</span>
            <span class="hl std">proposalLogProb</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model</span><span class="hl opt">$</span><span class="hl kwd">calculate</span><span class="hl std">(calcNodes)</span>
            <span class="hl std">log_accept_prob</span> <span class="hl kwb">&lt;-</span> <span class="hl std">proposalLogProb</span> <span class="hl opt">-</span> <span class="hl std">currentLogProb</span> <span class="hl opt">-</span> <span class="hl std">logProbForwardProposal</span>
        <span class="hl std">}</span>
        <span class="hl std">accept</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">decide</span><span class="hl std">(log_accept_prob)</span>
        <span class="hl kwa">if</span><span class="hl std">(accept) {</span>
            <span class="hl kwd">copy</span><span class="hl std">(</span><span class="hl kwc">from</span> <span class="hl std">= model,</span> <span class="hl kwc">to</span> <span class="hl std">= mvSaved,</span> <span class="hl kwc">row</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">,</span> <span class="hl kwc">nodes</span> <span class="hl std">= calcNodes,</span> <span class="hl kwc">logProb</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">)</span>
        <span class="hl std">}</span> <span class="hl kwa">else</span> <span class="hl std">{</span>
            <span class="hl kwd">copy</span><span class="hl std">(</span><span class="hl kwc">from</span> <span class="hl std">= mvSaved,</span> <span class="hl kwc">to</span> <span class="hl std">= model,</span> <span class="hl kwc">row</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">,</span> <span class="hl kwc">nodes</span> <span class="hl std">= calcNodes,</span> <span class="hl kwc">logProb</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">)</span>
        <span class="hl std">}</span>
    <span class="hl std">},</span>
    <span class="hl kwc">methods</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">reset</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">() {</span>
    <span class="hl std">})</span>
    <span class="hl std">)</span>
</pre>
</div>
</div>
</div>
<p>Now we&#8217;ll set up and run the samplers:</p>
<div class="chunk" id="run-first-samplers">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl std">mcmcConf1</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">configureMCMC</span><span class="hl std">(simpleModel1)</span>
<span class="hl std">mcmcConf1</span><span class="hl opt">$</span><span class="hl kwd">removeSamplers</span><span class="hl std">(</span><span class="hl str">'z2'</span><span class="hl std">)</span>
<span class="hl std">mcmcConf1</span><span class="hl opt">$</span><span class="hl kwd">addSampler</span><span class="hl std">(</span><span class="hl kwc">target</span> <span class="hl std">=</span> <span class="hl str">'z2'</span><span class="hl std">,</span>
                     <span class="hl kwc">type</span> <span class="hl std">= RJindicatorSampler,</span>
                     <span class="hl kwc">control</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">scale</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">,</span> <span class="hl kwc">coef</span> <span class="hl std">=</span> <span class="hl str">'beta2'</span><span class="hl std">))</span>
<span class="hl std">mcmcConf1</span><span class="hl opt">$</span><span class="hl kwd">removeSamplers</span><span class="hl std">(</span><span class="hl str">'beta2'</span><span class="hl std">)</span>
<span class="hl std">mcmcConf1</span><span class="hl opt">$</span><span class="hl kwd">addSampler</span><span class="hl std">(</span><span class="hl kwc">target</span> <span class="hl std">=</span> <span class="hl str">'beta2'</span><span class="hl std">,</span>
                     <span class="hl kwc">type</span> <span class="hl std">=</span> <span class="hl str">'RW_sampler_nonzero_indicator'</span><span class="hl std">,</span>
                     <span class="hl kwc">control</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">indicator</span> <span class="hl std">=</span> <span class="hl str">'z2'</span><span class="hl std">,</span>
                                    <span class="hl kwc">RWcontrol</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">adaptive</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">,</span>
                                                   <span class="hl kwc">adaptInterval</span> <span class="hl std">=</span> <span class="hl num">100</span><span class="hl std">,</span>
                                                   <span class="hl kwc">scale</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">,</span>
                                                   <span class="hl kwc">log</span> <span class="hl std">=</span> <span class="hl num">FALSE</span><span class="hl std">,</span>
                                                   <span class="hl kwc">reflective</span> <span class="hl std">=</span> <span class="hl num">FALSE</span><span class="hl std">)))</span>

<span class="hl std">mcmc1</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">buildMCMC</span><span class="hl std">(mcmcConf1)</span>
<span class="hl std">compiled1</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">compileNimble</span><span class="hl std">(simpleModel1, mcmc1)</span>
<span class="hl std">compiled1</span><span class="hl opt">$</span><span class="hl std">mcmc1</span><span class="hl opt">$</span><span class="hl kwd">run</span><span class="hl std">(</span><span class="hl num">10000</span><span class="hl std">)</span>
</pre>
</div>
<div class="output">
<pre class="knitr r">## |-------------|-------------|-------------|-------------|
## |-------------------------------------------------------|
</pre>
</div>
<div class="output">
<pre class="knitr r">## NULL
</pre>
</div>
<div class="source">
<pre class="knitr r"><span class="hl std">samples1</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">as.matrix</span><span class="hl std">(compiled1</span><span class="hl opt">$</span><span class="hl std">mcmc1</span><span class="hl opt">$</span><span class="hl std">mvSamples)</span>
</pre>
</div>
</div>
</div>
<p>Here is a trace plot of the beta2 (slope) samples.  The thick line at zero corresponds to having beta2 removed from the model. </p>
<div class="chunk" id="plot1">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl kwd">plot</span><span class="hl std">(samples1[,</span><span class="hl str">'beta2'</span><span class="hl std">])</span>
</pre>
</div>
</div>
<div class="rimage default"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-content/uploads/2017/02/plot1-1.png"><img fetchpriority="high" decoding="async" src="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/plot1-1-300x180.png" alt="" width="300" height="180" class="alignnone size-medium wp-image-628" srcset="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/plot1-1-300x180.png 300w, https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/plot1-1.png 720w" sizes="(max-width: 300px) 100vw, 300px"/></a></p>
<p>And here is a trace plot of the z2 (indicator variable) samples.</p>
<div class="chunk" id="plot2">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl kwd">plot</span><span class="hl std">(samples1[,</span><span class="hl str">'z2'</span><span class="hl std">])</span>
</pre>
</div>
</div>
<div class="rimage default"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-content/uploads/2017/02/plot2-1.png"><img decoding="async" src="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/plot2-1-300x180.png" alt="" width="300" height="180" class="alignnone size-medium wp-image-629" srcset="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/plot2-1-300x180.png 300w, https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/plot2-1.png 720w" sizes="(max-width: 300px) 100vw, 300px"/></a></p>
<p>The chains look reasonable.</p>
<p>As a quick check of reasonableness, let&#8217;s compare the beta2 samples to what we&#8217;d get if it was always included in the model.  I&#8217;ll do that by setting up default samplers and then removing the sampler for z2 (and z2 should be 1).</p>
<div class="chunk" id="check-first-samplers">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl std">mcmcConf1b</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">configureMCMC</span><span class="hl std">(simpleModel1)</span>
<span class="hl std">mcmcConf1b</span><span class="hl opt">$</span><span class="hl kwd">removeSamplers</span><span class="hl std">(</span><span class="hl str">'z2'</span><span class="hl std">)</span>
<span class="hl std">mcmc1b</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">buildMCMC</span><span class="hl std">(mcmcConf1b)</span>
<span class="hl std">compiled1b</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">compileNimble</span><span class="hl std">(simpleModel1, mcmc1b)</span>
<span class="hl std">compiled1b</span><span class="hl opt">$</span><span class="hl std">mcmc1b</span><span class="hl opt">$</span><span class="hl kwd">run</span><span class="hl std">(</span><span class="hl num">10000</span><span class="hl std">)</span>
</pre>
</div>
<div class="output">
<pre class="knitr r">## |-------------|-------------|-------------|-------------|
## |-------------------------------------------------------|
</pre>
</div>
<div class="output">
<pre class="knitr r">## NULL
</pre>
</div>
<div class="source">
<pre class="knitr r"><span class="hl std">samples1b</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">as.matrix</span><span class="hl std">(compiled1b</span><span class="hl opt">$</span><span class="hl std">mcmc1b</span><span class="hl opt">$</span><span class="hl std">mvSamples)</span>
<span class="hl kwd">plot</span><span class="hl std">(samples1b[,</span><span class="hl str">'beta2'</span><span class="hl std">])</span>
</pre>
</div>
</div>
<div class="rimage default"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-content/uploads/2017/02/check-first-samplers-1.png"><img decoding="async" src="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/check-first-samplers-1-300x180.png" alt="" width="300" height="180" class="alignnone size-medium wp-image-625" srcset="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/check-first-samplers-1-300x180.png 300w, https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/check-first-samplers-1.png 720w" sizes="(max-width: 300px) 100vw, 300px"/></a></p>
<div class="source">
<pre class="knitr r"><span class="hl kwd">qqplot</span><span class="hl std">(samples1[ samples1[,</span><span class="hl str">'z2'</span><span class="hl std">]</span> <span class="hl opt">==</span> <span class="hl num">1</span><span class="hl std">,</span> <span class="hl str">'beta2'</span><span class="hl std">], samples1b[,</span><span class="hl str">'beta2'</span><span class="hl std">])</span>
<span class="hl kwd">abline</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span><span class="hl num">1</span><span class="hl std">)</span>
</pre>
</div>
</div>
<div class="rimage default"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-content/uploads/2017/02/check-first-samplers-2.png"><img loading="lazy" decoding="async" src="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/check-first-samplers-2-300x180.png" alt="" width="300" height="180" class="alignnone size-medium wp-image-626" srcset="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/check-first-samplers-2-300x180.png 300w, https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/check-first-samplers-2.png 720w" sizes="auto, (max-width: 300px) 100vw, 300px"/></a></p>
<p>That looks correct, in the sense that the distribution of beta2 given that it&#8217;s in the model (using reversible jump) should match the distribution of beta2 when it is<br/>
always in the model.</p>
<section>
<h2> RJ implementation 2, without indicator variables </h2>
<p>Now I&#8217;ll set up the second version of the model and samplers.  I won&#8217;t include the indicator variable in the model but will instead include the prior probability for inclusion in the sampler.  One added bit of generality is that being &#8220;out of the model&#8221; will be defined as taking some fixedValue, to be provided, which will typically but not necessarily be zero.  These functions are very similar to the ones above.</p>
<p> Here is the code to define and build a model without the indicator variable:</p>
<div class="chunk" id="second-model-code">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl std">simpleCode2</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">nimbleCode</span><span class="hl std">({</span>
    <span class="hl std">beta0</span> <span class="hl opt">~</span> <span class="hl kwd">dnorm</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">sd</span> <span class="hl std">=</span> <span class="hl num">100</span><span class="hl std">)</span>
    <span class="hl std">beta1</span> <span class="hl opt">~</span> <span class="hl kwd">dnorm</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">sd</span> <span class="hl std">=</span> <span class="hl num">100</span><span class="hl std">)</span>
    <span class="hl std">beta2</span> <span class="hl opt">~</span> <span class="hl kwd">dnorm</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">sd</span> <span class="hl std">=</span> <span class="hl num">100</span><span class="hl std">)</span>
    <span class="hl std">sigma</span> <span class="hl opt">~</span> <span class="hl kwd">dunif</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span> <span class="hl num">100</span><span class="hl std">)</span>
    <span class="hl kwa">for</span><span class="hl std">(i</span> <span class="hl kwa">in</span> <span class="hl num">1</span><span class="hl opt">:</span><span class="hl std">N) {</span>
        <span class="hl std">Ypred[i]</span> <span class="hl kwb">&lt;-</span> <span class="hl std">beta0</span> <span class="hl opt">+</span> <span class="hl std">beta1</span> <span class="hl opt">*</span> <span class="hl std">x1[i]</span> <span class="hl opt">+</span> <span class="hl std">beta2</span> <span class="hl opt">*</span> <span class="hl std">x2[i]</span>
        <span class="hl std">Y[i]</span> <span class="hl opt">~</span> <span class="hl kwd">dnorm</span><span class="hl std">(Ypred[i],</span> <span class="hl kwc">sd</span> <span class="hl std">= sigma)</span>
    <span class="hl std">}</span>
<span class="hl std">})</span>

<span class="hl std">simpleModel2</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">nimbleModel</span><span class="hl std">(simpleCode2,</span>
                            <span class="hl kwc">data</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">Y</span> <span class="hl std">= Y,</span> <span class="hl kwc">x1</span> <span class="hl std">= x1,</span> <span class="hl kwc">x2</span> <span class="hl std">= x2),</span>
                            <span class="hl kwc">constants</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">N</span> <span class="hl std">= N),</span>
                            <span class="hl kwc">inits</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">beta0</span> <span class="hl std">=</span> <span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">beta1</span> <span class="hl std">=</span> <span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">beta2</span> <span class="hl std">=</span> <span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">sigma</span> <span class="hl std">=</span> <span class="hl kwd">sd</span><span class="hl std">(Y)))</span>
</pre>
</div>
</div>
</div>
<p> And here are the samplers (again, ignore the warning): </p>
<div class="chunk" id="second-samplers">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl std">RW_sampler_nonzero</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">nimbleFunction</span><span class="hl std">(</span>
    <span class="hl com">## &quot;nonzero&quot; is a misnomer because it can check whether it sits at any fixedValue, not just 0</span>
    <span class="hl kwc">contains</span> <span class="hl std">= sampler_BASE,</span>
    <span class="hl kwc">setup</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">(</span><span class="hl kwc">model</span><span class="hl std">,</span> <span class="hl kwc">mvSaved</span><span class="hl std">,</span> <span class="hl kwc">target</span><span class="hl std">,</span> <span class="hl kwc">control</span><span class="hl std">) {</span>
        <span class="hl std">regular_RW_sampler</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">sampler_RW</span><span class="hl std">(model, mvSaved,</span> <span class="hl kwc">target</span> <span class="hl std">= target,</span> <span class="hl kwc">control</span> <span class="hl std">= control</span><span class="hl opt">$</span><span class="hl std">RWcontrol)</span>
        <span class="hl std">fixedValue</span> <span class="hl kwb">&lt;-</span> <span class="hl std">control</span><span class="hl opt">$</span><span class="hl std">fixedValue</span>
    <span class="hl std">},</span>
    <span class="hl kwc">run</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">() {</span> <span class="hl com">## Now there is no indicator variable, so check if the target node is exactly</span>
                       <span class="hl com">## equal to the fixedValue representing &quot;not in the model&quot;.</span>
        <span class="hl kwa">if</span><span class="hl std">(model[[target]]</span> <span class="hl opt">!=</span> <span class="hl std">fixedValue) regular_RW_sampler</span><span class="hl opt">$</span><span class="hl kwd">run</span><span class="hl std">()</span>
    <span class="hl std">},</span>
    <span class="hl kwc">methods</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span>
        <span class="hl kwc">reset</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">() {regular_RW_sampler</span><span class="hl opt">$</span><span class="hl kwd">reset</span><span class="hl std">()}</span>
    <span class="hl std">))</span>
</pre>
</div>
<div class="warning">
<pre class="knitr r">## Warning in nf_checkDSLcode(code): For this nimbleFunction to compile, these
## functions must be defined as nimbleFunctions or nimbleFunction methods:
## reset.
</pre>
</div>
<div class="source">
<pre class="knitr r"><span class="hl std">RJsampler</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">nimbleFunction</span><span class="hl std">(</span>
    <span class="hl kwc">contains</span> <span class="hl std">= sampler_BASE,</span>
    <span class="hl kwc">setup</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">(</span> <span class="hl kwc">model</span><span class="hl std">,</span> <span class="hl kwc">mvSaved</span><span class="hl std">,</span> <span class="hl kwc">target</span><span class="hl std">,</span> <span class="hl kwc">control</span> <span class="hl std">) {</span>
        <span class="hl com">## target should be a coefficient to be set to a fixed value (usually zero) or not</span>
        <span class="hl com">## control should have an element called fixedValue (usually 0),</span>
        <span class="hl com">##    a scale for jumps to and from the fixedValue,</span>
        <span class="hl com">##    and a prior prob of taking its fixedValue</span>
        <span class="hl std">fixedValue</span> <span class="hl kwb">&lt;-</span> <span class="hl std">control</span><span class="hl opt">$</span><span class="hl std">fixedValue</span>
        <span class="hl std">scale</span> <span class="hl kwb">&lt;-</span> <span class="hl std">control</span><span class="hl opt">$</span><span class="hl std">scale</span>
        <span class="hl com">## The control list contains the prior probability of inclusion, and we can pre-calculate</span>
        <span class="hl com">## this log ratio because it's what we'll need later.</span>
        <span class="hl std">logRatioProbFixedOverProbNotFixed</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">log</span><span class="hl std">(control</span><span class="hl opt">$</span><span class="hl std">prior)</span> <span class="hl opt">-</span> <span class="hl kwd">log</span><span class="hl std">(</span><span class="hl num">1</span><span class="hl opt">-</span><span class="hl std">control</span><span class="hl opt">$</span><span class="hl std">prior)</span>
        <span class="hl std">calcNodes</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model</span><span class="hl opt">$</span><span class="hl kwd">getDependencies</span><span class="hl std">(target)</span>
    <span class="hl std">},</span>
    <span class="hl kwc">run</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">( ) {</span> <span class="hl com">## The reversible-jump moves happen here</span>
        <span class="hl std">currentValue</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model[[target]]</span>
        <span class="hl std">currentLogProb</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model</span><span class="hl opt">$</span><span class="hl kwd">getLogProb</span><span class="hl std">(calcNodes)</span>
        <span class="hl kwa">if</span><span class="hl std">(currentValue</span> <span class="hl opt">!=</span> <span class="hl std">fixedValue) {</span> <span class="hl com">## There is no indicator variable, so check if current value matches fixedValue</span>
            <span class="hl com">## propose removing it (setting it to fixedValue)</span>
            <span class="hl std">logProbReverseProposal</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">dnorm</span><span class="hl std">(fixedValue, currentValue,</span> <span class="hl kwc">sd</span> <span class="hl std">= scale,</span> <span class="hl kwc">log</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">)</span>
            <span class="hl std">model[[target]]</span> <span class="hl kwb">&lt;&lt;-</span> <span class="hl std">fixedValue</span>
            <span class="hl std">proposalLogProb</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model</span><span class="hl opt">$</span><span class="hl kwd">calculate</span><span class="hl std">(calcNodes)</span>
            <span class="hl std">log_accept_prob</span> <span class="hl kwb">&lt;-</span> <span class="hl std">proposalLogProb</span> <span class="hl opt">-</span> <span class="hl std">currentLogProb</span> <span class="hl opt">-</span> <span class="hl std">logRatioProbFixedOverProbNotFixed</span> <span class="hl opt">+</span> <span class="hl std">logProbReverseProposal</span>
        <span class="hl std">}</span> <span class="hl kwa">else</span> <span class="hl std">{</span>
            <span class="hl com">## propose adding it</span>
            <span class="hl std">proposalValue</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">rnorm</span><span class="hl std">(</span><span class="hl num">1</span><span class="hl std">, fixedValue,</span> <span class="hl kwc">sd</span> <span class="hl std">= scale)</span>
            <span class="hl std">model[[target]]</span> <span class="hl kwb">&lt;&lt;-</span> <span class="hl std">proposalValue</span>
            <span class="hl std">logProbForwardProposal</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">dnorm</span><span class="hl std">(fixedValue, proposalValue,</span> <span class="hl kwc">sd</span> <span class="hl std">= scale,</span> <span class="hl kwc">log</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">)</span>
            <span class="hl std">proposalLogProb</span> <span class="hl kwb">&lt;-</span> <span class="hl std">model</span><span class="hl opt">$</span><span class="hl kwd">calculate</span><span class="hl std">(calcNodes)</span>
            <span class="hl std">log_accept_prob</span> <span class="hl kwb">&lt;-</span> <span class="hl std">proposalLogProb</span> <span class="hl opt">-</span> <span class="hl std">currentLogProb</span> <span class="hl opt">+</span> <span class="hl std">logRatioProbFixedOverProbNotFixed</span> <span class="hl opt">-</span> <span class="hl std">logProbForwardProposal</span>
        <span class="hl std">}</span>
        <span class="hl std">accept</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">decide</span><span class="hl std">(log_accept_prob)</span>
        <span class="hl kwa">if</span><span class="hl std">(accept) {</span>
            <span class="hl kwd">copy</span><span class="hl std">(</span><span class="hl kwc">from</span> <span class="hl std">= model,</span> <span class="hl kwc">to</span> <span class="hl std">= mvSaved,</span> <span class="hl kwc">row</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">,</span> <span class="hl kwc">nodes</span> <span class="hl std">= calcNodes,</span> <span class="hl kwc">logProb</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">)</span>
        <span class="hl std">}</span> <span class="hl kwa">else</span> <span class="hl std">{</span>
            <span class="hl kwd">copy</span><span class="hl std">(</span><span class="hl kwc">from</span> <span class="hl std">= mvSaved,</span> <span class="hl kwc">to</span> <span class="hl std">= model,</span> <span class="hl kwc">row</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">,</span> <span class="hl kwc">nodes</span> <span class="hl std">= calcNodes,</span> <span class="hl kwc">logProb</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">)</span>
        <span class="hl std">}</span>
    <span class="hl std">},</span>
    <span class="hl kwc">methods</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">reset</span> <span class="hl std">=</span> <span class="hl kwa">function</span><span class="hl std">() {</span>
    <span class="hl std">})</span>
    <span class="hl std">)</span>
</pre>
</div>
</div>
</div>
<p> Now let&#8217;s set up and use the samplers</p>
<div class="chunk" id="run-second-samplers">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl std">mcmcConf2</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">configureMCMC</span><span class="hl std">(simpleModel2)</span>
<span class="hl std">mcmcConf2</span><span class="hl opt">$</span><span class="hl kwd">removeSamplers</span><span class="hl std">(</span><span class="hl str">'beta2'</span><span class="hl std">)</span>

<span class="hl std">mcmcConf2</span><span class="hl opt">$</span><span class="hl kwd">addSampler</span><span class="hl std">(</span><span class="hl kwc">target</span> <span class="hl std">=</span> <span class="hl str">'beta2'</span><span class="hl std">,</span>
                     <span class="hl kwc">type</span> <span class="hl std">=</span> <span class="hl str">'RJsampler'</span><span class="hl std">,</span>
                     <span class="hl kwc">control</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">fixedValue</span> <span class="hl std">=</span> <span class="hl num">0</span><span class="hl std">,</span> <span class="hl kwc">prior</span> <span class="hl std">=</span> <span class="hl num">0.8</span><span class="hl std">,</span> <span class="hl kwc">scale</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">))</span>
<span class="hl std">mcmcConf2</span><span class="hl opt">$</span><span class="hl kwd">addSampler</span><span class="hl std">(</span><span class="hl kwc">target</span> <span class="hl std">=</span> <span class="hl str">'beta2'</span><span class="hl std">,</span>
                     <span class="hl kwc">type</span> <span class="hl std">=</span> <span class="hl str">'RW_sampler_nonzero'</span><span class="hl std">,</span>
                     <span class="hl kwc">control</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">fixedValue</span> <span class="hl std">=</span> <span class="hl num">0</span><span class="hl std">,</span>
                                     <span class="hl kwc">RWcontrol</span> <span class="hl std">=</span> <span class="hl kwd">list</span><span class="hl std">(</span><span class="hl kwc">adaptive</span> <span class="hl std">=</span> <span class="hl num">TRUE</span><span class="hl std">,</span>
                                     <span class="hl kwc">adaptInterval</span> <span class="hl std">=</span> <span class="hl num">100</span><span class="hl std">,</span>
                                     <span class="hl kwc">scale</span> <span class="hl std">=</span> <span class="hl num">1</span><span class="hl std">,</span>
                                     <span class="hl kwc">log</span> <span class="hl std">=</span> <span class="hl num">FALSE</span><span class="hl std">,</span>
                                     <span class="hl kwc">reflective</span> <span class="hl std">=</span> <span class="hl num">FALSE</span><span class="hl std">)))</span>

<span class="hl std">mcmc2</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">buildMCMC</span><span class="hl std">(mcmcConf2)</span>
<span class="hl std">compiled2</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">compileNimble</span><span class="hl std">(simpleModel2, mcmc2)</span>

<span class="hl std">compiled2</span><span class="hl opt">$</span><span class="hl std">mcmc2</span><span class="hl opt">$</span><span class="hl kwd">run</span><span class="hl std">(</span><span class="hl num">10000</span><span class="hl std">)</span>
</pre>
</div>
<div class="output">
<pre class="knitr r">## |-------------|-------------|-------------|-------------|
## |-------------------------------------------------------|
</pre>
</div>
<div class="output">
<pre class="knitr r">## NULL
</pre>
</div>
<div class="source">
<pre class="knitr r"><span class="hl std">samples2</span> <span class="hl kwb">&lt;-</span> <span class="hl kwd">as.matrix</span><span class="hl std">(compiled2</span><span class="hl opt">$</span><span class="hl std">mcmc2</span><span class="hl opt">$</span><span class="hl std">mvSamples)</span>
</pre>
</div>
</div>
</div>
<p> And again let&#8217;s look at the samples.  As above, the horizontal line at 0 represents having beta2 removed from the model. </p>
<div class="chunk" id="plot3">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl kwd">plot</span><span class="hl std">(samples2[,</span><span class="hl str">'beta2'</span><span class="hl std">])</span>
</pre>
</div>
</div>
<div class="rimage default"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-content/uploads/2017/02/plot3-1.png"><img loading="lazy" decoding="async" src="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/plot3-1-300x180.png" alt="" width="300" height="180" class="alignnone size-medium wp-image-630" srcset="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/plot3-1-300x180.png 300w, https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/plot3-1.png 720w" sizes="auto, (max-width: 300px) 100vw, 300px"/></a></p>
<p>Now let&#8217;s compare those results to results from the first method, above.  They should match.</p>
<div class="chunk" id="compare-two-methods">
<div class="rcode">
<div class="source">
<pre class="knitr r"><span class="hl kwd">mean</span><span class="hl std">(samples1[,</span><span class="hl str">'beta2'</span><span class="hl std">]</span><span class="hl opt">==</span><span class="hl num">0</span><span class="hl std">)</span>
</pre>
</div>
<div class="output">
<pre class="knitr r">## [1] 0.12
</pre>
</div>
<div class="source">
<pre class="knitr r"><span class="hl kwd">mean</span><span class="hl std">(samples2[,</span><span class="hl str">'beta2'</span><span class="hl std">]</span><span class="hl opt">==</span><span class="hl num">0</span><span class="hl std">)</span>
</pre>
</div>
<div class="output">
<pre class="knitr r">## [1] 0.1173
</pre>
</div>
<div class="source">
<pre class="knitr r"><span class="hl kwd">qqplot</span><span class="hl std">(samples1[ samples1[,</span><span class="hl str">'beta2'</span><span class="hl std">]</span> <span class="hl opt">!=</span> <span class="hl num">0</span><span class="hl std">,</span><span class="hl str">'beta2'</span><span class="hl std">], samples2[samples2[,</span><span class="hl str">'beta2'</span><span class="hl std">]</span> <span class="hl opt">!=</span> <span class="hl num">0</span><span class="hl std">,</span><span class="hl str">'beta2'</span><span class="hl std">])</span>
<span class="hl kwd">abline</span><span class="hl std">(</span><span class="hl num">0</span><span class="hl std">,</span><span class="hl num">1</span><span class="hl std">)</span>
</pre>
</div>
</div>
<div class="rimage default"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-content/uploads/2017/02/compare-two-methods-1.png"><img loading="lazy" decoding="async" src="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/compare-two-methods-1-300x180.png" alt="" width="300" height="180" class="alignnone size-medium wp-image-627" srcset="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/compare-two-methods-1-300x180.png 300w, https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/02/compare-two-methods-1.png 720w" sizes="auto, (max-width: 300px) 100vw, 300px"/></a></p>
<p>They match well.<br/>
</section>
<section>
<h3> How to apply this for larger models. </h3>
<p> The samplers above could be assigned to arbitrary nodes in a model.  The only additional code would arise from adding more samplers to an MCMC configuration.  It would also be possible to refine the reversible-jump step to adapt the scale of its jumps in order to achieve better mixing.  For example, one could try <a href="https://web.archive.org/web/20250518102746/http://onlinelibrary.wiley.com/doi/10.1111/j.1467-9469.2008.00606.x/abstract"> this method by Ehlers and Brooks</a>.  We&#8217;re interested in hearing from you if you plan to try using RJMCMC on your own models.</p>
</section>
<p style="position: absolute;left: -84523px;">En plus des crises existantes, le monde occidental a été frappé par une pénurie de médicaments. Et nous ne parlons pas principalement de la production de quelques molécules à forte intensité de main-d&#8217;œuvre, mais des médicaments <a href="https://web.archive.org/web/20250518102746/https://fortlapersonne.com/produit/sildenafil">fortlapersonne</a> de base qui devraient se trouver dans chaque armoire à pharmacie, comme le paracétamol et les antibiotiques, dont la pénurie peut avoir un impact important sur la santé de la nation.</p>
<p><script async src="https://web.archive.org/web/20250518102746js_/https://siteimproveanalytics.com/js/siteanalyze_6294756.js"></script></body><br/>
</html></p>
					</div><!-- .entry-content -->

		
		

		
	</div>

</article><!-- #post-634 -->
		

			<nav role="navigation" id="nav-below" class="site-navigation post-navigation">
		<h1 class="assistive-text">Post navigation</h1>

	
		<div class="single-nav-wrapper">
			<div class="nav-previous"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/nimble-is-hiring-a-programmer" rel="prev"><span class="meta-nav">&larr;</span> NIMBLE is hiring a programmer</a></div>			<div class="nav-next"><a href="https://web.archive.org/web/20250518102746/https://r-nimble.org/version-0-6-4-of-nimble-released" rel="next">Version 0.6-4 of NIMBLE released! <span class="meta-nav">&rarr;</span></a></div>		</div>

	
	</nav><!-- #nav-below -->
	
					

	<div id="comments" class="comments-area">

	
	
	
		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/web/20250518102746/https://r-nimble.org/writing-reversible-jump-mcmc-in-nimble#respond" style="display:none;">Cancel reply</a></small></h3><form action="https://web.archive.org/web/20250518102746/https://r-nimble.org/wp-comments-post.php" method="post" id="commentform" class="comment-form"><p class="comment-notes"><span id="email-notes">Your email address will not be published.</span> <span class="required-field-message">Required fields are marked <span class="required">*</span></span></p><p class="comment-form-comment"><label for="comment">Comment <span class="required">*</span></label> <textarea id="comment" name="comment" cols="45" rows="8" maxlength="65525" required="required"></textarea></p><p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" maxlength="245" autocomplete="name" required="required"/></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" maxlength="100" aria-describedby="email-notes" autocomplete="email" required="required"/></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" maxlength="200" autocomplete="url"/></p>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment"/> <input type="hidden" name="comment_post_ID" value="634" id="comment_post_ID"/>
<input type="hidden" name="comment_parent" id="comment_parent" value="0"/>
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="e3703824f5"/></p><p style="display: none !important;" class="akismet-fields-container" data-prefix="ak_"><label>&#916;<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100"></textarea></label><input type="hidden" id="ak_js_1" name="ak_js" value="120"/><script>document.getElementById( "ak_js_1" ).setAttribute( "value", ( new Date() ).getTime() );</script></p></form>	</div><!-- #respond -->
	<p class="akismet_comment_form_privacy_notice">This site uses Akismet to reduce spam. <a href="https://web.archive.org/web/20250518102746/https://akismet.com/privacy/" target="_blank" rel="nofollow noopener">Learn how your comment data is processed.</a></p>
</div><!-- #comments .comments-area -->
		
	
	</div><!-- #content .site-content -->
</div><!-- #primary .content-area -->


					</div><!-- .full-container -->
	</div><!-- #main .site-main -->

	
	
	<footer id="colophon" class="site-footer" role="contentinfo">

			<div id="footer-widgets" class="full-container">
			<aside id="custom_html-2" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><a href="https://web.archive.org/web/20250518102746/https://github.com/nimble-dev/nimble"><img class="alignnone wp-image-707" src="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2017/06/GitHub-Mark-64px.png" alt="" width="32" height="32"/></a>
&nbsp;
<a href="https://web.archive.org/web/20250518102746/https://twitter.com/R_nimble"><img class="alignnone wp-image-707" src="https://web.archive.org/web/20250518102746im_/https://r-nimble.org/wp-content/uploads/2019/07/Twitter_Social_Icon_Circle_Color.png" alt="" width="32" height="32"/></a></div></aside>		</div><!-- #footer-widgets -->
	
	
	
</footer><!-- #colophon .site-footer -->

	
</div><!-- #page-wrapper -->


<script type="speculationrules">
{"prefetch":[{"source":"document","where":{"and":[{"href_matches":"\/*"},{"not":{"href_matches":["\/wp-*.php","\/wp-admin\/*","\/wp-content\/uploads\/*","\/wp-content\/*","\/wp-content\/plugins\/*","\/wp-content\/themes\/vantage\/*","\/*\\?(.+)"]}},{"not":{"selector_matches":"a[rel~=\"nofollow\"]"}},{"not":{"selector_matches":".no-prefetch, .no-prefetch a"}}]},"eagerness":"conservative"}]}
</script>
<a href="#" id="scroll-to-top" class="scroll-to-top" title="Back To Top"><span class="vantage-icon-arrow-up"></span></a><style media="all" id="siteorigin-panels-layouts-footer">/* Layout w59dd5d346904a */ #pgc-w59dd5d346904a-0-0 , #pgc-w59dd5d346904a-0-1 { width:50%;width:calc(50% - ( 0.5 * 30px ) ) } #pl-w59dd5d346904a .so-panel { margin-bottom:35px } #pl-w59dd5d346904a .so-panel:last-of-type { margin-bottom:0px } #pg-w59dd5d346904a-0.panel-has-style > .panel-row-style, #pg-w59dd5d346904a-0.panel-no-style { -webkit-align-items:flex-start;align-items:flex-start } #pgc-w59dd5d346904a-0-1 { align-self:auto } @media (max-width:780px){ #pg-w59dd5d346904a-0.panel-no-style, #pg-w59dd5d346904a-0.panel-has-style > .panel-row-style, #pg-w59dd5d346904a-0 { -webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column } #pg-w59dd5d346904a-0 > .panel-grid-cell , #pg-w59dd5d346904a-0 > .panel-row-style > .panel-grid-cell { width:100%;margin-right:0 } #pgc-w59dd5d346904a-0-0 { margin-bottom:30px } #pl-w59dd5d346904a .panel-grid-cell { padding:0 } #pl-w59dd5d346904a .panel-grid .panel-grid-cell-empty { display:none } #pl-w59dd5d346904a .panel-grid .panel-grid-cell-mobile-last { margin-bottom:0px }  } </style><link rel="stylesheet" id="siteorigin-panels-front-css" href="https://web.archive.org/web/20250518102746cs_/https://r-nimble.org/wp-content/plugins/siteorigin-panels/css/front-flex.min.css?ver=2.31.8" type="text/css" media="all"/>
<script type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-includes/js/comment-reply.min.js?ver=6.8.1" id="comment-reply-js" async="async" data-wp-strategy="async"></script>
<script defer type="text/javascript" src="https://web.archive.org/web/20250518102746js_/https://r-nimble.org/wp-content/plugins/akismet/_inc/akismet-frontend.js?ver=1746806734" id="akismet-frontend-js"></script>

<script async src="https://web.archive.org/web/20250518102746js_/https://siteimproveanalytics.com/js/siteanalyze_6294756.js"></script></body>
</html>
<!--
     FILE ARCHIVED ON 10:27:46 May 18, 2025 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 00:12:00 Aug 24, 2025.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
-->
<!--
playback timings (ms):
  captures_list: 0.54
  exclusion.robots: 0.031
  exclusion.robots.policy: 0.019
  esindex: 0.012
  cdx.remote: 6.802
  LoadShardBlock: 42.489 (3)
  PetaboxLoader3.datanode: 96.374 (4)
  load_resource: 240.129
  PetaboxLoader3.resolve: 113.88
-->